name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  backend:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: draci_doupe_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
      working-directory: ./backend
    
    - name: Lint
      run: npm run lint
      working-directory: ./backend
    
    - name: Create .env file
      run: |
        echo "JWT_SECRET=test-secret" > .env
        echo "DB_USER=postgres" >> .env
        echo "DB_PASSWORD=postgres" >> .env
        echo "DB_HOST=localhost" >> .env
        echo "DB_PORT=5432" >> .env
        echo "DB_NAME=draci_doupe_test" >> .env
        echo "GEMINI_API_KEY=fake-api-key" >> .env
      working-directory: ./backend
    
    - name: Run tests
      run: npm test
      working-directory: ./backend
      env:
        NODE_ENV: test
        JWT_SECRET: test-secret
        DB_USER: postgres
        DB_PASSWORD: postgres
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: draci_doupe_test
        GEMINI_API_KEY: fake-api-key
  
  frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
      working-directory: ./frontend
    
    - name: Lint
      run: npm run lint
      working-directory: ./frontend
    
    - name: Run tests
      run: npm test
      working-directory: ./frontend
      env:
        NODE_ENV: test
    
    - name: Build
      run: npm run build
      working-directory: ./frontend
      env:
        NODE_ENV: production
