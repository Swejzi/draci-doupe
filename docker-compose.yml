version: '3.8'

services:
  backend:
    build: ./backend
    container_name: draci-doupe-backend
    ports:
      - "3010:3000"
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres_db
      - DB_PORT=5432
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    depends_on:
      - postgres_db
    restart: unless-stopped
    networks:
      - app_network
      - pilarj-proxy_proxyNet

  frontend:
    build: ./frontend
    container_name: draci-doupe-frontend
    ports:
      - "8082:80"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - app_network
      - pilarj-proxy_proxyNet

  postgres_db:
    image: postgres:15
    container_name: draci-doupe-postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app_network

volumes:
  postgres_data:

networks:
  app_network:
  pilarj-proxy_proxyNet:
    external: true
    name: pilarj-proxy_proxyNet
    driver: bridge
